/**
 * Definition for a binary tree node.
 * public class TreeNode {
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public TreeNode searchBST(TreeNode root, int val) {
        // please fully understand this simple problem (recursion)
        if (root == null)  return null;
        
        if (root.val > val) return searchBST(root.left, val);
        if (root.val < val) return searchBST(root.right, val);
        
        return root;
        
      
    }
}


// class Solution {
//     public TreeNode searchBST(TreeNode root, int val) {
//         // Solution two iterative (dfs inorder traversal)
//         Stack<TreeNode> stack = new Stack<>();
    
//         while (root != null || !stack.isEmpty()){
//             while (root != null){
//                 stack.push(root);
//                 root = root.left;
//             }
//             root = stack.pop();
//             if (root.val == val) return root;
//             root = root.right;
//         }
        
//         return null;
      
//     }
// }
