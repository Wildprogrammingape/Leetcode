# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution:
    def zigzagLevelOrder(self, root: TreeNode) -> List[List[int]]:
        if root is None:
            return []
        
        current_list = []
        result = []
        current_list.append(root)
        i = 0
        
        while len(current_list) > 0:
            if i%2 == 0:
                result.append([n.val for n in current_list])
            else:
                result.append([n.val for n in current_list][::-1])  # reverse result
                
            next_level_list = []
            for node in current_list:
                if node.left is not None:
                    next_level_list.append(node.left)
                if node.right is not None:
                    next_level_list.append(node.right)
                        
            i += 1
                
            current_list = next_level_list
            
        return result
