class Solution {
    public void merge(int[] nums1, int m, int[] nums2, int n) {
        
        // Use 3 pointers: first points to the end of solid number in nums1 (m), second points to the end of nums2 (n), third points to current position of nums1 (index)
        
        m--;
        n--;
        int index = nums1.length - 1;     //    or: m+n-1
     
        // write a while loop to traverse num1 from the end
        while (index >= 0){
            if (m < 0){
                nums1[index] = nums2[n--];
            }
            else if (n < 0){
                nums1[index] = nums1[m--];
            }
            else{
                if (nums1[m] > nums2[n]){
                    nums1[index] = nums1[m--];
                }
                else{
                    nums1[index] = nums2[n--];
                }
            }
            index--;
        }
    }
}


//         Input:  nums1 = [1,2,3,0,0,0], m = 3
//                 nums2 = [2,5,6],       n = 3

//         Output: [1,2,2,3,5,6]