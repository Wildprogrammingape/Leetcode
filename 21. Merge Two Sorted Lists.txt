/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode mergeTwoLists(ListNode l1, ListNode l2) {
        ListNode dummy = new ListNode(0);
        ListNode cur = dummy;
        
        while (true){

            if (l1 == null && l2 != null){
                cur.next = l2;
                break;
            }
            
            else if (l2 == null && l1 != null){
                cur.next = l1;
                break;
            }
            
            else if (l1==null && l2==null) {
                break;    
            }
            
            else{ 
                if(l1.val > l2.val){
                    ListNode node = new ListNode(l2.val);
                    cur.next = node;
                    cur = cur.next; // cur move forward
                    l2 = l2.next;   // l2 move forward
                }
                else{
                    ListNode node = new ListNode(l1.val);
                    cur.next = node;
                    cur = cur.next;
                    l1 = l1.next;
                }
            } 
        }
        
        return dummy.next;
    }
}

// Input: 1->2->4, 1->3->4
// Output: 1->1->2->3->4->4
// dummy: 0->1->1->2->3->4->4