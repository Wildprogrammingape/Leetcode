/**
 * @param {number[]} nums
 * @return {number}
 */
var majorityElement = function(nums) {
    // // 方法一，sort后 取数组中间元素 Math.floor(length / 2)
    // const length = nums.length;
    // // sort the array
    // const sortedArr = nums.sort((a, b) => a - b);
    // // 排序后出现次数最多的元素在数组中间部位 (n/2)
    // return nums[Math.floor(length / 2)];
    
    
    // 用一个object{}来作为hashmap使用
    // hashmap[key]获取value
    // !undefined  等于 true
    
    const hashmap = {};
    
    for (let n of nums){
        // map中没有该元素就赋值为1
        if (hashmap[n] === undefined){
            hashmap[n] = 1;
        }
        else{
            // 有该元素就将hashmap[key]的value加一
            hashmap[n]++;
        }
        // 判断该值是否符合条件，符合就返回
        if (hashmap[n] > nums.length / 2){
            return n;
        }
    }
    
    // return 0;
    
};
