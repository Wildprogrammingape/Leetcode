# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution:
    def pruneTree(self, root: TreeNode) -> TreeNode:
        
        # DFS thought: go to the deepest level by recurrsion(* calculate from the lowest level*), set None if the node is a leaf node with value "0" . So if the lowest level is all set, the uper level will also change. 
        # e.g: in the lowest level, three yellow 0 is set to NONE, so the upper level will also change to NONE on the upper recurrsion program. 
        
        if root is None:
            return None
        
        root.left = self.pruneTree(root.left)
        root.right= self.pruneTree(root.right)
        
        if root.left is None and root.right is None and root.val == 0:
            return None
        
        return root
        