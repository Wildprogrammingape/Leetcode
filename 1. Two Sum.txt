class Solution {
    public int[] twoSum(int[] nums, int target) {
        
        /*
        //Solution one: brute force
        for (int i = 0; i < nums.length-1; i++)
        {
            for (int j = i+1; j<nums.length; j++)
            {
                if (nums[i] + nums[j] == target) 
                    return new int[] {i,j};
            }
        }
        throw new IllegalArgumentException("No answer found"); 
        */
        
        //Solution two: HashMap
        
        Map<Integer,Integer> map = new HashMap<>(); // create a hashmap to store value and index
        
        for (int i=0; i<nums.length; i++){
            int complement = target - nums[i];
            if (map.containsKey(complement)){
                return new int[] {map.get(complement), i}; 
            }
            else{
                map.put(nums[i], i);   // .put()
            }
        }
        throw new IllegalArgumentException("No array indices returned");
    }
}